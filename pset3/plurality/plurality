#include <cs50.h>
#include <stdio.h>
#include <string.h>
const int MAX = 9;
typedef struct
{
    string name;
    int votes;
}
candidate;
candidate candidates[MAX];
int candidate_count;
bool vote(string name);
void print_winner(void);
int main(int argc, string argv[])
{
    if (argc < 2)
    {
        printf("Usage: plurality candidate\n");
        return 1;
    }
    candidate_count = argc - 1;
    if (candidate_count > MAX)
    {
        printf("Maximum number of candidates is %i\n", MAX);
        return 2;
    }
    for (int i = 0; i < candidate_count; i++)
    {
        candidates[i].name = argv[i + 1];
        candidates[i].votes = 0;
    }
    int voter_count = get_int("Number of voters: ");
    for (int i = 0; i < voter_count; i++)
    {
        string name = get_string("Vote: ");
        if (!vote(name))
        {
            printf("Invalid vote.\n");
        }
    }
    print_winner();
}
bool vote(string name)
{
    int verification = 0;
    for (int i = 0; candidate_count > i; i++)
    {
        if (candidates[i].name == name)
        {
            candidates[i].votes++;
            verification++;
        }
    }
    if (verification > 0)
    {
        return true;
    }
    else
    {
        return false;
    }
}

void print_winner(void)
{
    int biggest = -1;
    string winners[9];
    int record = 0;
    int counter = 1;
    for (int i = 0; candidate_count > i; i++)
    {
        if (candidates[i].votes > biggest)
        {
            biggest = candidates[i].votes;
            winners[0] = candidates[i].name;
            record = i;
        }
        else if (candidates[i].name != candidates[record].name)
        {
            if (candidates[record].votes == candidates[i].votes)
            {
                winners[counter] = candidates[i].name;
                counter++;
            }
        }
    }
    for (int i = 0; i < counter; i++)
    {
        string print = winners[i];
        printf("%s\n", print);
    }
    return;
}
